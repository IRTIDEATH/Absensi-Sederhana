// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(cuid()) @map("_id")
  name      String
  email     String    @unique
  image     String?
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
  accounts  Account[]
}

model Session {
  id        String   @id @default(cuid()) @map("_id")
  userId    String
  token     String
  expiresAt DateTime
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                    String    @id @default(cuid()) @map("_id")
  userId                String
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum GenderEnum {
  laki_laki
  perempuan
}

model Siswa {
  id_siswa  Int        @id @default(autoincrement())
  nis       Int
  nama      String
  kelasId   Int
  gender    GenderEnum
  kehadiran Kehadiran?

  kelas Kelas @relation(fields: [kelasId], references: [id_kelas])

  created_at DateTime @default(now())
}

model Kelas {
  id_kelas   Int     @id @default(autoincrement())
  nama_kelas String
  Siswa      Siswa[]
}

enum KehadiranEnum {
  hadir
  terlambat
  sakit
  izin
  alpha
}

model Kehadiran {
  id_kehadiran Int           @id @default(autoincrement())
  tanggal      DateTime      @default(now())
  kehadiran    KehadiranEnum @default(hadir)
  siswaId      Int           @unique
  Siswa        Siswa         @relation(fields: [siswaId], references: [id_siswa], onDelete: Cascade)

  created_at DateTime @default(now())
}
